{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "textAnalyticsName": {
            "type": "string",
            "metadata": {
                "description": "Name of the Text Analytics service"
            }
        },
        "textAnalyticsTier": {
            "type": "string",
			"allowedValues": [
				"F0",
				"S0"
			],
			"defaultValue": "F0",
            "metadata": {
                "description": "Pricing tier"
            }
        },
        "textToSpeechName": {
            "type": "string",
            "metadata": {
                "description": "Name of the Text To Speech service"
            }
        },
        "textToSpeechTier": {
            "type": "string",
			"allowedValues": [
				"F0",
				"S0"
			],
			"defaultValue": "F0",
            "metadata": {
                "description": "Pricing tier"
            }
        },
        "eventHubNamespaceName": {
            "type": "string",
            "metadata": {
                "description": "Name of the Azure Event Hub namespace"
            }
        },
        "eventHubSKU": {
            "type": "string",
            "allowedValues": ["Basic", "Standard"],
            "defaultValue": "Standard",
            "metadata": {
                "description": "The messaging tier for the Azure Service Bus namespace"
            }
        },
        "eventHubSKUCapacity": {
            "type": "int",
            "allowedValues": [1, 2, 4],
            "defaultValue": 1,
            "metadata": {
                "description": "Azure Event Hub MessagingUnits for the premium namespace"
            }
        },
        "eventHubSenderName": {
            "type": "string",
            "metadata": {
                "description": "Name of the send string Azure Event Hub"
            }
        },
        "eventHubReceiverName": {
            "type": "string",
            "metadata": {
                "description": "Name of the receive string Azure Event Hub"
            }
        },
		"functionName": {
			"type": "string",
			"metadata": {
				"description": "The name of the Azure Function app to create"
			}
		},
		"functionAppSKU": {
			"type": "string",
			"allowedValues": [
				"Free",
				"Basic",
				"Standard"
			],
			"defaultValue": "Standard",
			"metadata": {
				"description": "The pricing tier for the Function App hosting plan."
			}
		},
		"functionAppSKUCode": {
			"type": "string",
			"allowedValues": [
				"F1",
				"B1",
				"S1"
			],
			"defaultValue": "S1",
			"metadata": {
				"description": "The pricing tier for the Function App hosting plan."
			}
		},
		"functionAppWorkerSize": {
			"type": "string",
			"allowedValues": [
				"0",
				"1",
				"2"
			],
			"defaultValue": "0",
			"metadata": {
				"description": "The instance size of the hosting plan (small, medium, or large)"
			}
		},
		"repoUrl": {
			"type": "string",
			"defaultValue": "https://github.com/Azure-Samples/gaming-cognitive-services-text-to-speech"
		},
		"branch": {
			"type": "string",
			"defaultValue": "master"
        }
    },
    "variables": {
		"defaultSASKeyName": "RootManageSharedAccessKey",
        "authRuleResourceId": "[resourceId('Microsoft.EventHub/namespaces/authorizationRules', parameters('eventHubNamespaceName'), variables('defaultSASKeyName'))]",
	    "functionAppName": "[parameters('functionName')]",
		"hostingPlanName": "[parameters('functionName')]",
		"storageAccountName": "[concat(uniquestring(resourceGroup().id), 'cstts')]",
		"storageAccountid": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
	},
    "resources": [
	    {
            "type": "Microsoft.CognitiveServices/accounts",
            "sku": {
                "name": "[parameters('textAnalyticsTier')]"
            },
            "kind": "TextAnalytics",
            "name": "[parameters('textAnalyticsName')]",
            "apiVersion": "2016-02-01-preview",
            "location": "[parameters('location')]",
            "scale": null,
            "properties": {},
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/bf654bba-c5ec-448f-ad63-afd72e52e8b1/resourceGroups/RG-InGameChatEnhancements/providers/Microsoft.CognitiveServices/accounts/SS-IGCE'.",
            "type": "Microsoft.CognitiveServices/accounts",
            "sku": {
                "name": "[parameters('textToSpeechTier')]"
            },
            "kind": "SpeechServices",
            "name": "[parameters('textToSpeechName')]",
            "apiVersion": "2016-02-01-preview",
            "location": "[parameters('location')]",
            "scale": null,
            "properties": {},
            "dependsOn": []
        },
		{
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccountName')]",
            "apiVersion": "2018-07-01",
            "location": "[parameters('location')]",
            "kind": "BlockBlobStorage",
            "sku": {
                "name": "Premium_LRS",
				 "tier": "Premium"
            },
			"properties": {
                 "accessTier": "Hot"
            }
        },
		{
            "type": "Microsoft.EventHub/namespaces",
            "sku": {
                "name": "[parameters('eventHubSKU')]",
                "tier": "[parameters('eventHubSKU')]",
                "capacity": "[parameters('eventHubSKUCapacity')]"
            },
            "name": "[parameters('eventHubNamespaceName')]",
            "apiVersion": "2017-04-01",
            "location": "[parameters('location')]",
            "tags": {},
            "scale": null,
            "properties": {
                "isAutoInflateEnabled": false,
                "maximumThroughputUnits": 0
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs",
            "name": "[concat(parameters('eventHubNamespaceName'), '/', parameters('eventHubSenderName'))]",
            "apiVersion": "2017-04-01",
            "location": "[parameters('location')]",
            "scale": null,
            "properties": {
                "messageRetentionInDays": 7,
                "partitionCount": 1,
                "status": "Active"
            },
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', parameters('eventHubNamespaceName'))]"
            ]
        },
        {
            "type": "Microsoft.EventHub/namespaces/eventhubs",
            "name": "[concat(parameters('eventHubNamespaceName'), '/', parameters('eventHubReceiverName'))]",
            "apiVersion": "2017-04-01",
            "location": "[parameters('location')]",
            "scale": null,
            "properties": {
                "messageRetentionInDays": 7,
                "partitionCount": 1,
                "status": "Active"
            },
            "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', parameters('eventHubNamespaceName'))]"
            ]
        },		
		{
			"type": "Microsoft.Web/serverfarms",
			"apiVersion": "2016-09-01",
			"name": "[variables('hostingPlanName')]",
			"location": "[parameters('location')]",
			"properties": {
				"name": "[variables('hostingPlanName')]",
				"workerSizeId": "[parameters('functionAppWorkerSize')]",
				"hostingEnvironment": "",
				"numberOfWorkers": 1
			},
			"sku": {
				"Tier": "[parameters('functionAppSKU')]",
				"Name": "[parameters('functionAppSKUCode')]"
			}			
		},
		{
			"apiVersion": "2016-08-01",
			"type": "Microsoft.Web/sites",
			"name": "[variables('functionAppName')]",
			"location": "[parameters('location')]",
			"kind": "functionapp",
			"properties": {
				"name": "[variables('functionAppName')]",
				"serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
				"hostingEnvironment": "",
				"clientAffinityEnabled": false,
				"siteConfig": {
					"alwaysOn": true
				}
			},
			"dependsOn": [
				"[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
				"[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
			],
			"resources": [
				{
					"apiVersion": "2016-08-01",
					"name": "appsettings",
					"type": "config",
					"dependsOn": [
						"[resourceId('Microsoft.Web/sites', variables('functionAppName'))]",
						"[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
					],
					"properties": {
						"AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1,';')]",
						"AzureWebJobsDashboard": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1,';')]",
						"FUNCTIONS_EXTENSION_VERSION": "~2"
					}
				},
                {
                    "apiVersion": "2015-08-01",
                    "name": "web",
                    "type": "sourcecontrols",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites', parameters('appName'))]"
                    ],
                    "properties": {
                        "RepoUrl": "[parameters('repoUrl')]",
                        "branch": "[parameters('branch')]",
                        "IsManualIntegration": true
                    }
                }
			]
		}
    ]
}